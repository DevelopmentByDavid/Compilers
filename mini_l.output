Terminals which are not used

   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: function functions
    3          | epsilon

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | epsilon

    7 declaration: IDENT COMMA statements
    8            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT COLON INTEGER

   10 statements: statement SEMICOLON statements
   11           | epsilon

   12 statement: var ASSIGN expression
   13          | IF bool_expr THEN statements ENDIF
   14          | IF bool_expr THEN statements ELSE statements ENDIF
   15          | WHILE bool_expr BEGINLOOP statements ENDLOOP
   16          | DO BEGINLOOP statements ENDLOOP WHILE bool_expr
   17          | READ vars
   18          | WRITE vars
   19          | CONTINUE
   20          | RETURN expression

   21 bool_expr: relation_and_expr
   22          | relation_and_expr OR relation_and_expr

   23 relation_and_expr: relation_expr
   24                  | relation_expr AND relation_expr

   25 relation_expr: expression comp expression
   26              | TRUE
   27              | FALSE
   28              | L_PAREN bool_expr R_PAREN
   29              | NOT expression comp expression
   30              | NOT TRUE
   31              | NOT FALSE
   32              | NOT L_PAREN bool_expr R_PAREN

   33 comp: EQ
   34     | NEQ
   35     | LT
   36     | GT
   37     | LTE
   38     | GTE

   39 expression: multiplicative_expr
   40           | multiplicative_expr SUB multiplicative_expr
   41           | multiplicative_expr ADD multiplicative_expr

   42 expressions: expression COMMA expressions
   43            | epsilon

   44 multiplicative_expr: term
   45                    | term MOD term
   46                    | term DIV term
   47                    | term MULT term

   48 term: IDENT L_PAREN expression R_PAREN
   49     | NUMBER
   50     | var
   51     | L_PAREN expressions R_PAREN
   52     | SUB NUMBER
   53     | SUB var
   54     | SUB L_PAREN expressions R_PAREN

   55 var: IDENT
   56    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   57 vars: var COMMA vars
   58     | epsilon

   59 epsilon: /* empty */
   60        | ";"


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 8 9
ARRAY (266) 8
OF (267) 8
IF (268) 13 14
THEN (269) 13 14
ENDIF (270) 13 14
ELSE (271) 14
WHILE (272) 15 16
DO (273) 16
BEGINLOOP (274) 15 16
ENDLOOP (275) 15 16
CONTINUE (276) 19
READ (277) 17
WRITE (278) 18
AND (279) 24
OR (280) 22
NOT (281) 29 30 31 32
TRUE (282) 26 30
FALSE (283) 27 31
RETURN (284) 20
IDENT (285) 4 7 8 9 48 55 56
COLON (286) 8 9
SEMICOLON (287) 4 5 10
COMMA (288) 7 42 57
NUMBER (289) 8 49 52
ASSIGN (290) 12
NEQ (291) 34
EQ (292) 33
GTE (293) 38
GT (294) 36
LTE (295) 37
LT (296) 35
SUB (297) 40 52 53 54
ADD (298) 41
MOD (299) 45
DIV (300) 46
MULT (301) 47
UMINUS (302)
L_SQUARE_BRACKET (303) 8 56
R_SQUARE_BRACKET (304) 8 56
L_PAREN (305) 28 32 48 51 54
R_PAREN (306) 28 32 48 51 54
";" (307) 60


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
program (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 2
function (56)
    on left: 4, on right: 2
declarations (57)
    on left: 5 6, on right: 4 5
declaration (58)
    on left: 7 8 9, on right: 5
statements (59)
    on left: 10 11, on right: 4 7 10 13 14 15 16
statement (60)
    on left: 12 13 14 15 16 17 18 19 20, on right: 10
bool_expr (61)
    on left: 21 22, on right: 13 14 15 16 28 32
relation_and_expr (62)
    on left: 23 24, on right: 21 22
relation_expr (63)
    on left: 25 26 27 28 29 30 31 32, on right: 23 24
comp (64)
    on left: 33 34 35 36 37 38, on right: 25 29
expression (65)
    on left: 39 40 41, on right: 12 20 25 29 42 48 56
expressions (66)
    on left: 42 43, on right: 42 51 54
multiplicative_expr (67)
    on left: 44 45 46 47, on right: 39 40 41
term (68)
    on left: 48 49 50 51 52 53 54, on right: 44 45 46 47
var (69)
    on left: 55 56, on right: 12 50 53 57
vars (70)
    on left: 57 58, on right: 17 18 57
epsilon (71)
    on left: 59 60, on right: 3 6 11 43 58


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    program    go to state 3
    functions  go to state 4
    function   go to state 5
    epsilon    go to state 6


state 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    IDENT  shift, and go to state 7


state 2

   60 epsilon: ";" .

    $default  reduce using rule 60 (epsilon)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 8


state 4

    1 program: functions .

    $default  reduce using rule 1 (program)


state 5

    2 functions: function . functions

    FUNCTION  shift, and go to state 1
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    functions  go to state 9
    function   go to state 5
    epsilon    go to state 6


state 6

    3 functions: epsilon .

    $default  reduce using rule 3 (functions)


state 7

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 10


state 8

    0 $accept: program $end .

    $default  accept


state 9

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


state 10

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    BEGIN_PARAMS  shift, and go to state 11


state 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    IDENT  shift, and go to state 12
    ";"    shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    declarations  go to state 13
    declaration   go to state 14
    epsilon       go to state 15


state 12

    7 declaration: IDENT . COMMA statements
    8            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT . COLON INTEGER

    COLON  shift, and go to state 16
    COMMA  shift, and go to state 17


state 13

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 18


state 14

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


state 15

    6 declarations: epsilon .

    $default  reduce using rule 6 (declarations)


state 16

    8 declaration: IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT COLON . INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


state 17

    7 declaration: IDENT COMMA . statements

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 30
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON . END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    END_PARAMS  shift, and go to state 34


state 19

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12
    ";"    shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    declarations  go to state 35
    declaration   go to state 14
    epsilon       go to state 15


state 20

    9 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 21

    8 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 36


state 22

   13 statement: IF . bool_expr THEN statements ENDIF
   14          | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43

    bool_expr            go to state 44
    relation_and_expr    go to state 45
    relation_expr        go to state 46
    expression           go to state 47
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 23

   15 statement: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43

    bool_expr            go to state 51
    relation_and_expr    go to state 45
    relation_expr        go to state 46
    expression           go to state 47
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 24

   16 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 52


state 25

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


state 26

   17 statement: READ . vars

    IDENT  shift, and go to state 29
    ";"    shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    var      go to state 53
    vars     go to state 54
    epsilon  go to state 55


state 27

   18 statement: WRITE . vars

    IDENT  shift, and go to state 29
    ";"    shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    var      go to state 53
    vars     go to state 56
    epsilon  go to state 55


state 28

   20 statement: RETURN . expression

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    expression           go to state 58
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 29

   55 var: IDENT .
   56    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 59

    $default  reduce using rule 55 (var)


state 30

    7 declaration: IDENT COMMA statements .

    $default  reduce using rule 7 (declaration)


state 31

   10 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 60


state 32

   12 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 61


state 33

   11 statements: epsilon .

    $default  reduce using rule 11 (statements)


state 34

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS . BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    BEGIN_LOCALS  shift, and go to state 62


state 35

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


state 36

    8 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 63


state 37

   29 relation_expr: NOT . expression comp expression
   30              | NOT . TRUE
   31              | NOT . FALSE
   32              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 64
    FALSE    shift, and go to state 65
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 66

    expression           go to state 67
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 38

   26 relation_expr: TRUE .

    $default  reduce using rule 26 (relation_expr)


state 39

   27 relation_expr: FALSE .

    $default  reduce using rule 27 (relation_expr)


state 40

   48 term: IDENT . L_PAREN expression R_PAREN
   55 var: IDENT .
   56    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 59
    L_PAREN           shift, and go to state 68

    $default  reduce using rule 55 (var)


state 41

   49 term: NUMBER .

    $default  reduce using rule 49 (term)


state 42

   52 term: SUB . NUMBER
   53     | SUB . var
   54     | SUB . L_PAREN expressions R_PAREN

    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 69
    L_PAREN  shift, and go to state 70

    var  go to state 71


state 43

   28 relation_expr: L_PAREN . bool_expr R_PAREN
   51 term: L_PAREN . expressions R_PAREN

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    ";"      shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    bool_expr            go to state 72
    relation_and_expr    go to state 45
    relation_expr        go to state 46
    expression           go to state 73
    expressions          go to state 74
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50
    epsilon              go to state 75


state 44

   13 statement: IF bool_expr . THEN statements ENDIF
   14          | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 76


state 45

   21 bool_expr: relation_and_expr .
   22          | relation_and_expr . OR relation_and_expr

    OR  shift, and go to state 77

    $default  reduce using rule 21 (bool_expr)


state 46

   23 relation_and_expr: relation_expr .
   24                  | relation_expr . AND relation_expr

    AND  shift, and go to state 78

    $default  reduce using rule 23 (relation_and_expr)


state 47

   25 relation_expr: expression . comp expression

    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    GTE  shift, and go to state 81
    GT   shift, and go to state 82
    LTE  shift, and go to state 83
    LT   shift, and go to state 84

    comp  go to state 85


state 48

   39 expression: multiplicative_expr .
   40           | multiplicative_expr . SUB multiplicative_expr
   41           | multiplicative_expr . ADD multiplicative_expr

    SUB  shift, and go to state 86
    ADD  shift, and go to state 87

    $default  reduce using rule 39 (expression)


state 49

   44 multiplicative_expr: term .
   45                    | term . MOD term
   46                    | term . DIV term
   47                    | term . MULT term

    MOD   shift, and go to state 88
    DIV   shift, and go to state 89
    MULT  shift, and go to state 90

    $default  reduce using rule 44 (multiplicative_expr)


state 50

   50 term: var .

    $default  reduce using rule 50 (term)


state 51

   15 statement: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 91


state 52

   16 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 92
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 53

   57 vars: var . COMMA vars

    COMMA  shift, and go to state 93


state 54

   17 statement: READ vars .

    $default  reduce using rule 17 (statement)


state 55

   58 vars: epsilon .

    $default  reduce using rule 58 (vars)


state 56

   18 statement: WRITE vars .

    $default  reduce using rule 18 (statement)


state 57

   51 term: L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    ";"      shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    expression           go to state 94
    expressions          go to state 74
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50
    epsilon              go to state 75


state 58

   20 statement: RETURN expression .

    $default  reduce using rule 20 (statement)


state 59

   56 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    expression           go to state 95
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 60

   10 statements: statement SEMICOLON . statements

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 96
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 61

   12 statement: var ASSIGN . expression

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    expression           go to state 97
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 62

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS . declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    IDENT  shift, and go to state 12
    ";"    shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    declarations  go to state 98
    declaration   go to state 14
    epsilon       go to state 15


state 63

    8 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 99


state 64

   30 relation_expr: NOT TRUE .

    $default  reduce using rule 30 (relation_expr)


state 65

   31 relation_expr: NOT FALSE .

    $default  reduce using rule 31 (relation_expr)


state 66

   32 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   51 term: L_PAREN . expressions R_PAREN

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43
    ";"      shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    bool_expr            go to state 100
    relation_and_expr    go to state 45
    relation_expr        go to state 46
    expression           go to state 73
    expressions          go to state 74
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50
    epsilon              go to state 75


state 67

   29 relation_expr: NOT expression . comp expression

    NEQ  shift, and go to state 79
    EQ   shift, and go to state 80
    GTE  shift, and go to state 81
    GT   shift, and go to state 82
    LTE  shift, and go to state 83
    LT   shift, and go to state 84

    comp  go to state 101


state 68

   48 term: IDENT L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    expression           go to state 102
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 69

   52 term: SUB NUMBER .

    $default  reduce using rule 52 (term)


state 70

   54 term: SUB L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    ";"      shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    expression           go to state 94
    expressions          go to state 103
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50
    epsilon              go to state 75


state 71

   53 term: SUB var .

    $default  reduce using rule 53 (term)


state 72

   28 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 104


state 73

   25 relation_expr: expression . comp expression
   42 expressions: expression . COMMA expressions

    COMMA  shift, and go to state 105
    NEQ    shift, and go to state 79
    EQ     shift, and go to state 80
    GTE    shift, and go to state 81
    GT     shift, and go to state 82
    LTE    shift, and go to state 83
    LT     shift, and go to state 84

    comp  go to state 85


state 74

   51 term: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 106


state 75

   43 expressions: epsilon .

    $default  reduce using rule 43 (expressions)


state 76

   13 statement: IF bool_expr THEN . statements ENDIF
   14          | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 107
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 77

   22 bool_expr: relation_and_expr OR . relation_and_expr

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43

    relation_and_expr    go to state 108
    relation_expr        go to state 46
    expression           go to state 47
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 78

   24 relation_and_expr: relation_expr AND . relation_expr

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43

    relation_expr        go to state 109
    expression           go to state 47
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 79

   34 comp: NEQ .

    $default  reduce using rule 34 (comp)


state 80

   33 comp: EQ .

    $default  reduce using rule 33 (comp)


state 81

   38 comp: GTE .

    $default  reduce using rule 38 (comp)


state 82

   36 comp: GT .

    $default  reduce using rule 36 (comp)


state 83

   37 comp: LTE .

    $default  reduce using rule 37 (comp)


state 84

   35 comp: LT .

    $default  reduce using rule 35 (comp)


state 85

   25 relation_expr: expression comp . expression

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    expression           go to state 110
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 86

   40 expression: multiplicative_expr SUB . multiplicative_expr

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    multiplicative_expr  go to state 111
    term                 go to state 49
    var                  go to state 50


state 87

   41 expression: multiplicative_expr ADD . multiplicative_expr

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    multiplicative_expr  go to state 112
    term                 go to state 49
    var                  go to state 50


state 88

   45 multiplicative_expr: term MOD . term

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    term  go to state 113
    var   go to state 50


state 89

   46 multiplicative_expr: term DIV . term

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    term  go to state 114
    var   go to state 50


state 90

   47 multiplicative_expr: term MULT . term

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    term  go to state 115
    var   go to state 50


state 91

   15 statement: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 116
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 92

   16 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 117


state 93

   57 vars: var COMMA . vars

    IDENT  shift, and go to state 29
    ";"    shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    var      go to state 53
    vars     go to state 118
    epsilon  go to state 55


state 94

   42 expressions: expression . COMMA expressions

    COMMA  shift, and go to state 105


state 95

   56 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 119


state 96

   10 statements: statement SEMICOLON statements .

    $default  reduce using rule 10 (statements)


state 97

   12 statement: var ASSIGN expression .

    $default  reduce using rule 12 (statement)


state 98

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations . SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 120


state 99

    8 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 121


state 100

   32 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 122


state 101

   29 relation_expr: NOT expression comp . expression

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57

    expression           go to state 123
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 102

   48 term: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 124


state 103

   54 term: SUB L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 125


state 104

   28 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 28 (relation_expr)


state 105

   42 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 57
    ";"      shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    expression           go to state 94
    expressions          go to state 126
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50
    epsilon              go to state 75


state 106

   51 term: L_PAREN expressions R_PAREN .

    $default  reduce using rule 51 (term)


state 107

   13 statement: IF bool_expr THEN statements . ENDIF
   14          | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 127
    ELSE   shift, and go to state 128


state 108

   22 bool_expr: relation_and_expr OR relation_and_expr .

    $default  reduce using rule 22 (bool_expr)


state 109

   24 relation_and_expr: relation_expr AND relation_expr .

    $default  reduce using rule 24 (relation_and_expr)


state 110

   25 relation_expr: expression comp expression .

    $default  reduce using rule 25 (relation_expr)


state 111

   40 expression: multiplicative_expr SUB multiplicative_expr .

    $default  reduce using rule 40 (expression)


state 112

   41 expression: multiplicative_expr ADD multiplicative_expr .

    $default  reduce using rule 41 (expression)


state 113

   45 multiplicative_expr: term MOD term .

    $default  reduce using rule 45 (multiplicative_expr)


state 114

   46 multiplicative_expr: term DIV term .

    $default  reduce using rule 46 (multiplicative_expr)


state 115

   47 multiplicative_expr: term MULT term .

    $default  reduce using rule 47 (multiplicative_expr)


state 116

   15 statement: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 129


state 117

   16 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 130


state 118

   57 vars: var COMMA vars .

    $default  reduce using rule 57 (vars)


state 119

   56 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 56 (var)


state 120

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON . END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY

    END_LOCALS  shift, and go to state 131


state 121

    8 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 132


state 122

   32 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 32 (relation_expr)


state 123

   29 relation_expr: NOT expression comp expression .

    $default  reduce using rule 29 (relation_expr)


state 124

   48 term: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 48 (term)


state 125

   54 term: SUB L_PAREN expressions R_PAREN .

    $default  reduce using rule 54 (term)


state 126

   42 expressions: expression COMMA expressions .

    $default  reduce using rule 42 (expressions)


state 127

   13 statement: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 13 (statement)


state 128

   14 statement: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 133
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 129

   15 statement: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 15 (statement)


state 130

   16 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 37
    TRUE     shift, and go to state 38
    FALSE    shift, and go to state 39
    IDENT    shift, and go to state 40
    NUMBER   shift, and go to state 41
    SUB      shift, and go to state 42
    L_PAREN  shift, and go to state 43

    bool_expr            go to state 134
    relation_and_expr    go to state 45
    relation_expr        go to state 46
    expression           go to state 47
    multiplicative_expr  go to state 48
    term                 go to state 49
    var                  go to state 50


state 131

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS . BEGIN_BODY statements SEMICOLON END_BODY

    BEGIN_BODY  shift, and go to state 135


state 132

    8 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 133

   14 statement: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 136


state 134

   16 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 16 (statement)


state 135

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY . statements SEMICOLON END_BODY

    IF        shift, and go to state 22
    WHILE     shift, and go to state 23
    DO        shift, and go to state 24
    CONTINUE  shift, and go to state 25
    READ      shift, and go to state 26
    WRITE     shift, and go to state 27
    RETURN    shift, and go to state 28
    IDENT     shift, and go to state 29
    ";"       shift, and go to state 2

    $default  reduce using rule 59 (epsilon)

    statements  go to state 137
    statement   go to state 31
    var         go to state 32
    epsilon     go to state 33


state 136

   14 statement: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 14 (statement)


state 137

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements . SEMICOLON END_BODY

    SEMICOLON  shift, and go to state 138


state 138

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON . END_BODY

    END_BODY  shift, and go to state 139


state 139

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations SEMICOLON END_PARAMS BEGIN_LOCALS declarations SEMICOLON END_LOCALS BEGIN_BODY statements SEMICOLON END_BODY .

    $default  reduce using rule 4 (function)
