declarations -> epsilon
idents -> epsilon
statements -> IDENT idents COLON INTEGER
idents -> epsilon
idents -> COMMA IDENT idents
idents -> COMMA IDENT idents
statements -> IDENT idents COLON INTEGER
idents -> epsilon
statements -> IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
declarations -> epsilon
declarations -> declaration SEMICOLON declarations
declarations -> declaration SEMICOLON declarations
declarations -> declaration SEMICOLON declarations
var -> IDENT
var -> IDENT
vars -> epsilon
vars -> COMMA var vars 
statement ->  READ var vars
var -> IDENT
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression_loop -> ADD multiplicative_expr expression_loop
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> var
term -> NUMBER
terms -> epsilon
terms -> MOD term terms
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> EQ
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expr -> relation_and_expr bool_expressions
statement -> CONTINUE
statements -> epsilon
statement -> IF bool_expr THEN statement SEMICOLON statements ENDIF
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression_loop -> SUB  multiplicative_expr expression_loop
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
vars -> epsilon
statement -> WRITE var vars
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> LT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expr -> relation_and_expr bool_expressions
statement -> DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> LT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> LT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> GTE
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expressions -> AND relation_expr relation_and_expressions
relation_and_expressions -> AND relation_expr relation_and_expressions
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expr -> relation_and_expr bool_expressions
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var -> IDENT
term -> var
term -> NUMBER
terms -> epsilon
terms -> MULT term terms
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var -> IDENT
term -> var
term -> NUMBER
terms -> epsilon
terms -> MULT term terms
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> GTE
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expr -> relation_expr relation_and_expressions
relation_expr -> FALSE
relation_and_expressions -> epsilon
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expressions -> OR relation_and_expr bool_expressions
bool_expr -> relation_and_expr bool_expressions
var -> IDENT
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression_loop -> SUB  multiplicative_expr expression_loop
expression_loop -> ADD multiplicative_expr expression_loop
expression -> multiplicative_expr expression_loop
term -> L_PAREN expression R_PAREN
term -> NUMBER
terms -> epsilon
terms -> MOD term terms
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression_loop -> SUB  multiplicative_expr expression_loop
expression -> multiplicative_expr expression_loop
statement -> var ASSIGN expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> GT
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expr -> relation_and_expr bool_expressions
statement -> CONTINUE
statements -> epsilon
statement -> IF bool_expr THEN statement SEMICOLON statements ENDIF
var -> IDENT
vars -> epsilon
statement -> WRITE var vars
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statement -> WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP
statements -> epsilon
statement -> IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF
var -> IDENT
var -> IDENT
var -> IDENT
vars -> epsilon
vars -> COMMA var vars 
vars -> COMMA var vars 
statement -> WRITE var vars
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> LT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> GTE
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expressions -> AND relation_expr relation_and_expressions
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expr -> relation_and_expr bool_expressions
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
vars -> epsilon
statement -> WRITE var vars
statements -> epsilon
statement -> IF bool_expr THEN statement SEMICOLON statements ENDIF
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> LT
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
comp -> GTE
term -> NUMBER
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
relation_expr -> expression comp expression
relation_and_expressions -> epsilon
relation_and_expressions -> AND relation_expr relation_and_expressions
relation_and_expr -> relation_expr relation_and_expressions
bool_expressions -> epsilon
bool_expr -> relation_and_expr bool_expressions
var -> IDENT
term -> var
terms -> epsilon
multiplicative_expr -> term terms
expression_loop -> epsilon
expression -> multiplicative_expr expression_loop
var -> IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET
vars -> epsilon
statement -> WRITE var vars
statements -> epsilon
statement -> IF bool_expr THEN statement SEMICOLON statements ENDIF
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
function -> FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY
functions -> epsilon
functions -> function functions
program -> functions
