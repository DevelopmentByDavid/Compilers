Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    5 fnDecl: FUNCTION IDENT

    6 params: BEGIN_PARAMS declarations END_PARAMS

    7 declarations: %empty
    8             | declaration SEMICOLON declarations

    9 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT idents COLON INTEGER

   11 idents: %empty
   12       | COMMA IDENT idents

   13 statements: %empty
   14           | statement SEMICOLON statements

   15 statement: var ASSIGN expression
   16          | IF bool_expr THEN statement SEMICOLON statements ENDIF
   17          | IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF
   18          | WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP
   19          | DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr
   20          | READ var vars
   21          | WRITE var vars
   22          | CONTINUE
   23          | RETURN expression

   24 bool_expr: relation_and_expr bool_expressions

   25 bool_expressions: %empty
   26                 | OR relation_and_expr bool_expressions

   27 relation_and_expr: relation_expr relation_and_expressions

   28 relation_and_expressions: %empty
   29                         | AND relation_expr relation_and_expressions

   30 relation_expr: expression comp expression
   31              | TRUE
   32              | FALSE
   33              | L_PAREN bool_expr R_PAREN
   34              | NOT expression comp expression
   35              | NOT TRUE
   36              | NOT FALSE
   37              | NOT L_PAREN bool_expr R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: multiplicative_expr expression_loop

   45 expression_loop: %empty
   46                | ADD multiplicative_expr expression_loop
   47                | SUB multiplicative_expr expression_loop

   48 expressions: expression COMMA expressions
   49            | expression
   50            | %empty

   51 terms: %empty
   52      | MOD term terms
   53      | DIV term terms
   54      | MULT term terms

   55 multiplicative_expr: term terms

   56 term: IDENT L_PAREN expressions R_PAREN
   57     | NUMBER
   58     | var
   59     | L_PAREN expression R_PAREN
   60     | SUB NUMBER
   61     | SUB var
   62     | SUB L_PAREN expression R_PAREN

   63 var: IDENT
   64    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   65 vars: %empty
   66     | COMMA var vars


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION <myString> (258) 5
BEGIN_PARAMS <myString> (259) 6
END_PARAMS <myString> (260) 6
BEGIN_LOCALS <myString> (261) 4
END_LOCALS <myString> (262) 4
BEGIN_BODY <myString> (263) 4
END_BODY <myString> (264) 4
INTEGER <myString> (265) 9 10
ARRAY <myString> (266) 9
OF <myString> (267) 9
IF <myString> (268) 16 17
THEN <myString> (269) 16 17
ENDIF <myString> (270) 16 17
ELSE <myString> (271) 17
WHILE <myString> (272) 18 19
DO <myString> (273) 19
BEGINLOOP <myString> (274) 18 19
ENDLOOP <myString> (275) 18 19
CONTINUE <myString> (276) 22
READ <myString> (277) 20
WRITE <myString> (278) 21
AND <myString> (279) 29
OR <myString> (280) 26
NOT <myString> (281) 34 35 36 37
TRUE <myString> (282) 31 35
FALSE <myString> (283) 32 36
RETURN <myString> (284) 23
IDENT <myString> (285) 5 9 10 12 56 63 64
COLON <myString> (286) 9 10
SEMICOLON <myString> (287) 4 8 14 16 17 18 19
COMMA <myString> (288) 12 48 66
NUMBER <myString> (289) 9 57 60
ASSIGN (290) 15
NEQ (291) 39
EQ (292) 38
GTE (293) 43
GT (294) 41
LTE (295) 42
LT (296) 40
SUB (297) 47 60 61 62
ADD (298) 46
MOD (299) 52
DIV (300) 53
MULT (301) 54
UMINUS (302)
L_SQUARE_BRACKET (303) 9 64
R_SQUARE_BRACKET (304) 9 64
L_PAREN (305) 33 37 56 59 62
R_PAREN (306) 33 37 56 59 62


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program <myString> (53)
    on left: 1, on right: 0
functions <myString> (54)
    on left: 2 3, on right: 1 3
function <myString> (55)
    on left: 4, on right: 3
fnDecl <myString> (56)
    on left: 5, on right: 4
params <myBlock> (57)
    on left: 6, on right: 4
declarations <myBlock> (58)
    on left: 7 8, on right: 4 6 8
declaration <myBlock> (59)
    on left: 9 10, on right: 8
idents <myBlock> (60)
    on left: 11 12, on right: 9 10 12
statements <myBlock> (61)
    on left: 13 14, on right: 4 14 16 17 18 19
statement <myBlock> (62)
    on left: 15 16 17 18 19 20 21 22 23, on right: 4 14 16 17 18 19
bool_expr <myBlock> (63)
    on left: 24, on right: 16 17 18 19 33 37
bool_expressions <myBlock> (64)
    on left: 25 26, on right: 24 26
relation_and_expr <myBlock> (65)
    on left: 27, on right: 24 26
relation_and_expressions <myBlock> (66)
    on left: 28 29, on right: 27 29
relation_expr <myBlock> (67)
    on left: 30 31 32 33 34 35 36 37, on right: 27 29
comp <myString> (68)
    on left: 38 39 40 41 42 43, on right: 30 34
expression <myBlock> (69)
    on left: 44, on right: 15 23 30 34 48 49 59 62 64
expression_loop <myBlock> (70)
    on left: 45 46 47, on right: 44 46 47
expressions <myBlock> (71)
    on left: 48 49 50, on right: 48 56
terms <myBlock> (72)
    on left: 51 52 53 54, on right: 52 53 54 55
multiplicative_expr <myBlock> (73)
    on left: 55, on right: 44 46 47
term <myBlock> (74)
    on left: 56 57 58 59 60 61 62, on right: 52 53 54 55
var <myBlock> (75)
    on left: 63 64, on right: 15 20 21 58 61 66
vars <myBlock> (76)
    on left: 65 66, on right: 20 21 66


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4
    fnDecl     go to state 5


State 1

    5 fnDecl: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4
    fnDecl     go to state 5


State 5

    4 function: fnDecl . SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 fnDecl: FUNCTION IDENT .

    $default  reduce using rule 5 (fnDecl)


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: fnDecl SEMICOLON . params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    params  go to state 11


State 10

    6 params: BEGIN_PARAMS . declarations END_PARAMS

    IDENT  shift, and go to state 12

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13
    declaration   go to state 14


State 11

    4 function: fnDecl SEMICOLON params . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_LOCALS  shift, and go to state 15


State 12

    9 declaration: IDENT . idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT . idents COLON INTEGER

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (idents)

    idents  go to state 17


State 13

    6 params: BEGIN_PARAMS declarations . END_PARAMS

    END_PARAMS  shift, and go to state 18


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 7 (declarations)

    declarations  go to state 20
    declaration   go to state 14


State 16

   12 idents: COMMA . IDENT idents

    IDENT  shift, and go to state 21


State 17

    9 declaration: IDENT idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT idents . COLON INTEGER

    COLON  shift, and go to state 22


State 18

    6 params: BEGIN_PARAMS declarations END_PARAMS .

    $default  reduce using rule 6 (params)


State 19

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 7 (declarations)

    declarations  go to state 23
    declaration   go to state 14


State 20

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_LOCALS  shift, and go to state 24


State 21

   12 idents: COMMA IDENT . idents

    COMMA  shift, and go to state 16

    $default  reduce using rule 11 (idents)

    idents  go to state 25


State 22

    9 declaration: IDENT idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   10            | IDENT idents COLON . INTEGER

    INTEGER  shift, and go to state 26
    ARRAY    shift, and go to state 27


State 23

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 24

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_BODY  shift, and go to state 28


State 25

   12 idents: COMMA IDENT idents .

    $default  reduce using rule 12 (idents)


State 26

   10 declaration: IDENT idents COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 27

    9 declaration: IDENT idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 28

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statement SEMICOLON statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 38
    var        go to state 39


State 29

    9 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 40


State 30

   16 statement: IF . bool_expr THEN statement SEMICOLON statements ENDIF
   17          | IF . bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 48
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 31

   18 statement: WHILE . bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 55
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 32

   19 statement: DO . BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 56


State 33

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 34

   20 statement: READ . var vars

    IDENT  shift, and go to state 37

    var  go to state 57


State 35

   21 statement: WRITE . var vars

    IDENT  shift, and go to state 37

    var  go to state 58


State 36

   23 statement: RETURN . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 60
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 37

   63 var: IDENT .
   64    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 61

    $default  reduce using rule 63 (var)


State 38

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement . SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 62


State 39

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 63


State 40

    9 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 64


State 41

   34 relation_expr: NOT . expression comp expression
   35              | NOT . TRUE
   36              | NOT . FALSE
   37              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67

    expression           go to state 68
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 42

   31 relation_expr: TRUE .

    $default  reduce using rule 31 (relation_expr)


State 43

   32 relation_expr: FALSE .

    $default  reduce using rule 32 (relation_expr)


State 44

   56 term: IDENT . L_PAREN expressions R_PAREN
   63 var: IDENT .
   64    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 61
    L_PAREN           shift, and go to state 69

    $default  reduce using rule 63 (var)


State 45

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


State 46

   60 term: SUB . NUMBER
   61     | SUB . var
   62     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 37
    NUMBER   shift, and go to state 70
    L_PAREN  shift, and go to state 71

    var  go to state 72


State 47

   33 relation_expr: L_PAREN . bool_expr R_PAREN
   59 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 73
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 74
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 48

   16 statement: IF bool_expr . THEN statement SEMICOLON statements ENDIF
   17          | IF bool_expr . THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    THEN  shift, and go to state 75


State 49

   24 bool_expr: relation_and_expr . bool_expressions

    OR  shift, and go to state 76

    $default  reduce using rule 25 (bool_expressions)

    bool_expressions  go to state 77


State 50

   27 relation_and_expr: relation_expr . relation_and_expressions

    AND  shift, and go to state 78

    $default  reduce using rule 28 (relation_and_expressions)

    relation_and_expressions  go to state 79


State 51

   30 relation_expr: expression . comp expression

    NEQ  shift, and go to state 80
    EQ   shift, and go to state 81
    GTE  shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    LT   shift, and go to state 85

    comp  go to state 86


State 52

   44 expression: multiplicative_expr . expression_loop

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 45 (expression_loop)

    expression_loop  go to state 89


State 53

   55 multiplicative_expr: term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 51 (terms)

    terms  go to state 93


State 54

   58 term: var .

    $default  reduce using rule 58 (term)


State 55

   18 statement: WHILE bool_expr . BEGINLOOP statement SEMICOLON statements ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 56

   19 statement: DO BEGINLOOP . statement SEMICOLON statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 95
    var        go to state 39


State 57

   20 statement: READ var . vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 65 (vars)

    vars  go to state 97


State 58

   21 statement: WRITE var . vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 65 (vars)

    vars  go to state 98


State 59

   59 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 99
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 60

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 61

   64 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 100
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 62

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 101
    statement   go to state 102
    var         go to state 39


State 63

   15 statement: var ASSIGN . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 103
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 64

    9 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 104


State 65

   35 relation_expr: NOT TRUE .

    $default  reduce using rule 35 (relation_expr)


State 66

   36 relation_expr: NOT FALSE .

    $default  reduce using rule 36 (relation_expr)


State 67

   37 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   59 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 105
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 74
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 68

   34 relation_expr: NOT expression . comp expression

    NEQ  shift, and go to state 80
    EQ   shift, and go to state 81
    GTE  shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    LT   shift, and go to state 85

    comp  go to state 106


State 69

   56 term: IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    $default  reduce using rule 50 (expressions)

    expression           go to state 107
    expressions          go to state 108
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 70

   60 term: SUB NUMBER .

    $default  reduce using rule 60 (term)


State 71

   62 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 109
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 72

   61 term: SUB var .

    $default  reduce using rule 61 (term)


State 73

   33 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 110


State 74

   30 relation_expr: expression . comp expression
   59 term: L_PAREN expression . R_PAREN

    NEQ      shift, and go to state 80
    EQ       shift, and go to state 81
    GTE      shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    LT       shift, and go to state 85
    R_PAREN  shift, and go to state 111

    comp  go to state 86


State 75

   16 statement: IF bool_expr THEN . statement SEMICOLON statements ENDIF
   17          | IF bool_expr THEN . statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 112
    var        go to state 39


State 76

   26 bool_expressions: OR . relation_and_expr bool_expressions

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    relation_and_expr    go to state 113
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 77

   24 bool_expr: relation_and_expr bool_expressions .

    $default  reduce using rule 24 (bool_expr)


State 78

   29 relation_and_expressions: AND . relation_expr relation_and_expressions

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    relation_expr        go to state 114
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 79

   27 relation_and_expr: relation_expr relation_and_expressions .

    $default  reduce using rule 27 (relation_and_expr)


State 80

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 81

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 82

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 83

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 84

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 85

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 86

   30 relation_expr: expression comp . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 115
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 87

   47 expression_loop: SUB . multiplicative_expr expression_loop

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    multiplicative_expr  go to state 116
    term                 go to state 53
    var                  go to state 54


State 88

   46 expression_loop: ADD . multiplicative_expr expression_loop

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    multiplicative_expr  go to state 117
    term                 go to state 53
    var                  go to state 54


State 89

   44 expression: multiplicative_expr expression_loop .

    $default  reduce using rule 44 (expression)


State 90

   52 terms: MOD . term terms

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    term  go to state 118
    var   go to state 54


State 91

   53 terms: DIV . term terms

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    term  go to state 119
    var   go to state 54


State 92

   54 terms: MULT . term terms

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    term  go to state 120
    var   go to state 54


State 93

   55 multiplicative_expr: term terms .

    $default  reduce using rule 55 (multiplicative_expr)


State 94

   18 statement: WHILE bool_expr BEGINLOOP . statement SEMICOLON statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 121
    var        go to state 39


State 95

   19 statement: DO BEGINLOOP statement . SEMICOLON statements ENDLOOP WHILE bool_expr

    SEMICOLON  shift, and go to state 122


State 96

   66 vars: COMMA . var vars

    IDENT  shift, and go to state 37

    var  go to state 123


State 97

   20 statement: READ var vars .

    $default  reduce using rule 20 (statement)


State 98

   21 statement: WRITE var vars .

    $default  reduce using rule 21 (statement)


State 99

   59 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 100

   64 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 101

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements . END_BODY

    END_BODY  shift, and go to state 125


State 102

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 126


State 103

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 104

    9 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 127


State 105

   37 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 128


State 106

   34 relation_expr: NOT expression comp . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 129
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 107

   48 expressions: expression . COMMA expressions
   49            | expression .

    COMMA  shift, and go to state 130

    $default  reduce using rule 49 (expressions)


State 108

   56 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 131


State 109

   62 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 132


State 110

   33 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 33 (relation_expr)


State 111

   59 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 112

   16 statement: IF bool_expr THEN statement . SEMICOLON statements ENDIF
   17          | IF bool_expr THEN statement . SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    SEMICOLON  shift, and go to state 133


State 113

   26 bool_expressions: OR relation_and_expr . bool_expressions

    OR  shift, and go to state 76

    $default  reduce using rule 25 (bool_expressions)

    bool_expressions  go to state 134


State 114

   29 relation_and_expressions: AND relation_expr . relation_and_expressions

    AND  shift, and go to state 78

    $default  reduce using rule 28 (relation_and_expressions)

    relation_and_expressions  go to state 135


State 115

   30 relation_expr: expression comp expression .

    $default  reduce using rule 30 (relation_expr)


State 116

   47 expression_loop: SUB multiplicative_expr . expression_loop

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 45 (expression_loop)

    expression_loop  go to state 136


State 117

   46 expression_loop: ADD multiplicative_expr . expression_loop

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 45 (expression_loop)

    expression_loop  go to state 137


State 118

   52 terms: MOD term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 51 (terms)

    terms  go to state 138


State 119

   53 terms: DIV term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 51 (terms)

    terms  go to state 139


State 120

   54 terms: MULT term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 51 (terms)

    terms  go to state 140


State 121

   18 statement: WHILE bool_expr BEGINLOOP statement . SEMICOLON statements ENDLOOP

    SEMICOLON  shift, and go to state 141


State 122

   19 statement: DO BEGINLOOP statement SEMICOLON . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 142
    statement   go to state 102
    var         go to state 39


State 123

   66 vars: COMMA var . vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 65 (vars)

    vars  go to state 143


State 124

   64 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 125

    4 function: fnDecl SEMICOLON params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY .

    $default  reduce using rule 4 (function)


State 126

   14 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 144
    statement   go to state 102
    var         go to state 39


State 127

    9 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 128

   37 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 37 (relation_expr)


State 129

   34 relation_expr: NOT expression comp expression .

    $default  reduce using rule 34 (relation_expr)


State 130

   48 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    $default  reduce using rule 50 (expressions)

    expression           go to state 107
    expressions          go to state 145
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 131

   56 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 56 (term)


State 132

   62 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (term)


State 133

   16 statement: IF bool_expr THEN statement SEMICOLON . statements ENDIF
   17          | IF bool_expr THEN statement SEMICOLON . statements ELSE statement SEMICOLON statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 146
    statement   go to state 102
    var         go to state 39


State 134

   26 bool_expressions: OR relation_and_expr bool_expressions .

    $default  reduce using rule 26 (bool_expressions)


State 135

   29 relation_and_expressions: AND relation_expr relation_and_expressions .

    $default  reduce using rule 29 (relation_and_expressions)


State 136

   47 expression_loop: SUB multiplicative_expr expression_loop .

    $default  reduce using rule 47 (expression_loop)


State 137

   46 expression_loop: ADD multiplicative_expr expression_loop .

    $default  reduce using rule 46 (expression_loop)


State 138

   52 terms: MOD term terms .

    $default  reduce using rule 52 (terms)


State 139

   53 terms: DIV term terms .

    $default  reduce using rule 53 (terms)


State 140

   54 terms: MULT term terms .

    $default  reduce using rule 54 (terms)


State 141

   18 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 147
    statement   go to state 102
    var         go to state 39


State 142

   19 statement: DO BEGINLOOP statement SEMICOLON statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 148


State 143

   66 vars: COMMA var vars .

    $default  reduce using rule 66 (vars)


State 144

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 145

   48 expressions: expression COMMA expressions .

    $default  reduce using rule 48 (expressions)


State 146

   16 statement: IF bool_expr THEN statement SEMICOLON statements . ENDIF
   17          | IF bool_expr THEN statement SEMICOLON statements . ELSE statement SEMICOLON statements ENDIF

    ENDIF  shift, and go to state 149
    ELSE   shift, and go to state 150


State 147

   18 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statements . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 148

   19 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 152


State 149

   16 statement: IF bool_expr THEN statement SEMICOLON statements ENDIF .

    $default  reduce using rule 16 (statement)


State 150

   17 statement: IF bool_expr THEN statement SEMICOLON statements ELSE . statement SEMICOLON statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 153
    var        go to state 39


State 151

   18 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 152

   19 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 154
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


State 153

   17 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement . SEMICOLON statements ENDIF

    SEMICOLON  shift, and go to state 155


State 154

   19 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 19 (statement)


State 155

   17 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 13 (statements)

    statements  go to state 156
    statement   go to state 102
    var         go to state 39


State 156

   17 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements . ENDIF

    ENDIF  shift, and go to state 157


State 157

   17 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF .

    $default  reduce using rule 17 (statement)
