Terminals unused in grammar

   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: %empty
    3          | function functions

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    5 fnName: FUNCTION IDENT

    6 declarations: %empty
    7             | declaration SEMICOLON declarations

    8 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT idents COLON INTEGER

   10 idents: %empty
   11       | COMMA IDENT idents

   12 statements: %empty
   13           | statement SEMICOLON statements

   14 statement: var ASSIGN expression
   15          | IF bool_expr THEN statement SEMICOLON statements ENDIF
   16          | IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF
   17          | WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP
   18          | DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr
   19          | READ var vars
   20          | WRITE var vars
   21          | CONTINUE
   22          | RETURN expression

   23 bool_expr: relation_and_expr bool_expressions

   24 bool_expressions: %empty
   25                 | OR relation_and_expr bool_expressions

   26 relation_and_expr: relation_expr relation_and_expressions

   27 relation_and_expressions: %empty
   28                         | AND relation_expr relation_and_expressions

   29 relation_expr: expression comp expression
   30              | TRUE
   31              | FALSE
   32              | L_PAREN bool_expr R_PAREN
   33              | NOT expression comp expression
   34              | NOT TRUE
   35              | NOT FALSE
   36              | NOT L_PAREN bool_expr R_PAREN

   37 comp: EQ
   38     | NEQ
   39     | LT
   40     | GT
   41     | LTE
   42     | GTE

   43 expression: multiplicative_expr expression_loop

   44 expression_loop: %empty
   45                | ADD multiplicative_expr expression_loop
   46                | SUB multiplicative_expr expression_loop

   47 expressions: expression COMMA expressions
   48            | expression
   49            | %empty

   50 terms: %empty
   51      | MOD term terms
   52      | DIV term terms
   53      | MULT term terms

   54 multiplicative_expr: term terms

   55 term: IDENT L_PAREN expressions R_PAREN
   56     | NUMBER
   57     | var
   58     | L_PAREN expression R_PAREN
   59     | SUB NUMBER
   60     | SUB var
   61     | SUB L_PAREN expression R_PAREN

   62 var: IDENT
   63    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   64 vars: %empty
   65     | COMMA var vars


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION <myString> (258) 5
BEGIN_PARAMS <myString> (259) 4
END_PARAMS <myString> (260) 4
BEGIN_LOCALS <myString> (261) 4
END_LOCALS <myString> (262) 4
BEGIN_BODY <myString> (263) 4
END_BODY <myString> (264) 4
INTEGER <myString> (265) 8 9
ARRAY <myString> (266) 8
OF <myString> (267) 8
IF <myString> (268) 15 16
THEN <myString> (269) 15 16
ENDIF <myString> (270) 15 16
ELSE <myString> (271) 16
WHILE <myString> (272) 17 18
DO <myString> (273) 18
BEGINLOOP <myString> (274) 17 18
ENDLOOP <myString> (275) 17 18
CONTINUE <myString> (276) 21
READ <myString> (277) 19
WRITE <myString> (278) 20
AND <myString> (279) 28
OR <myString> (280) 25
NOT <myString> (281) 33 34 35 36
TRUE <myString> (282) 30 34
FALSE <myString> (283) 31 35
RETURN <myString> (284) 22
IDENT <myString> (285) 5 8 9 11 55 62 63
COLON <myString> (286) 8 9
SEMICOLON <myString> (287) 4 7 13 15 16 17 18
COMMA <myString> (288) 11 47 65
NUMBER <myString> (289) 8 56 59
ASSIGN (290) 14
NEQ (291) 38
EQ (292) 37
GTE (293) 42
GT (294) 40
LTE (295) 41
LT (296) 39
SUB (297) 46 59 60 61
ADD (298) 45
MOD (299) 51
DIV (300) 52
MULT (301) 53
UMINUS (302)
L_SQUARE_BRACKET (303) 8 63
R_SQUARE_BRACKET (304) 8 63
L_PAREN (305) 32 36 55 58 61
R_PAREN (306) 32 36 55 58 61


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program <myString> (53)
    on left: 1, on right: 0
functions <myString> (54)
    on left: 2 3, on right: 1 3
function <myString> (55)
    on left: 4, on right: 3
fnName <myString> (56)
    on left: 5, on right: 4
declarations <myString> (57)
    on left: 6 7, on right: 4 7
declaration <myString> (58)
    on left: 8 9, on right: 7
idents <myString> (59)
    on left: 10 11, on right: 8 9 11
statements <myString> (60)
    on left: 12 13, on right: 4 13 15 16 17 18
statement <myString> (61)
    on left: 14 15 16 17 18 19 20 21 22, on right: 4 13 15 16 17 18
bool_expr <myString> (62)
    on left: 23, on right: 15 16 17 18 32 36
bool_expressions <myString> (63)
    on left: 24 25, on right: 23 25
relation_and_expr <myString> (64)
    on left: 26, on right: 23 25
relation_and_expressions <myString> (65)
    on left: 27 28, on right: 26 28
relation_expr <myString> (66)
    on left: 29 30 31 32 33 34 35 36, on right: 26 28
comp <myInt> (67)
    on left: 37 38 39 40 41 42, on right: 29 33
expression <myString> (68)
    on left: 43, on right: 14 22 29 33 47 48 58 61 63
expression_loop <myString> (69)
    on left: 44 45 46, on right: 43 45 46
expressions <myString> (70)
    on left: 47 48 49, on right: 47 55
terms <myString> (71)
    on left: 50 51 52 53, on right: 51 52 53 54
multiplicative_expr <myString> (72)
    on left: 54, on right: 43 45 46
term <myString> (73)
    on left: 55 56 57 58 59 60 61, on right: 51 52 53 54
var <myString> (74)
    on left: 62 63, on right: 14 19 20 57 60 65
vars <myString> (75)
    on left: 64 65, on right: 19 20 65


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4
    fnName     go to state 5


State 1

    5 fnName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: program . $end

    $end  shift, and go to state 7


State 3

    1 program: functions .

    $default  reduce using rule 1 (program)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4
    fnName     go to state 5


State 5

    4 function: fnName . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 fnName: FUNCTION IDENT .

    $default  reduce using rule 5 (fnName)


State 7

    0 $accept: program $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

    4 function: fnName SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: fnName SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 12
    declaration   go to state 13


State 11

    8 declaration: IDENT . idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT . idents COLON INTEGER

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (idents)

    idents  go to state 15


State 12

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_PARAMS  shift, and go to state 16


State 13

    7 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 14

   11 idents: COMMA . IDENT idents

    IDENT  shift, and go to state 18


State 15

    8 declaration: IDENT idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT idents . COLON INTEGER

    COLON  shift, and go to state 19


State 16

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    7 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 13


State 18

   11 idents: COMMA IDENT . idents

    COMMA  shift, and go to state 14

    $default  reduce using rule 10 (idents)

    idents  go to state 22


State 19

    8 declaration: IDENT idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | IDENT idents COLON . INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 6 (declarations)

    declarations  go to state 25
    declaration   go to state 13


State 21

    7 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 7 (declarations)


State 22

   11 idents: COMMA IDENT idents .

    $default  reduce using rule 11 (idents)


State 23

    9 declaration: IDENT idents COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 24

    8 declaration: IDENT idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 25

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

    8 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


State 27

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

    8 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statement SEMICOLON statements END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 39
    var        go to state 40


State 30

    8 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 31

   15 statement: IF . bool_expr THEN statement SEMICOLON statements ENDIF
   16          | IF . bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 49
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 32

   17 statement: WHILE . bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 56
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 33

   18 statement: DO . BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 57


State 34

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 35

   19 statement: READ . var vars

    IDENT  shift, and go to state 38

    var  go to state 58


State 36

   20 statement: WRITE . var vars

    IDENT  shift, and go to state 38

    var  go to state 59


State 37

   22 statement: RETURN . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 61
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 38

   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 62 (var)


State 39

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement . SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 63


State 40

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 64


State 41

    8 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 65


State 42

   33 relation_expr: NOT . expression comp expression
   34              | NOT . TRUE
   35              | NOT . FALSE
   36              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 66
    FALSE    shift, and go to state 67
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 68

    expression           go to state 69
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 43

   30 relation_expr: TRUE .

    $default  reduce using rule 30 (relation_expr)


State 44

   31 relation_expr: FALSE .

    $default  reduce using rule 31 (relation_expr)


State 45

   55 term: IDENT . L_PAREN expressions R_PAREN
   62 var: IDENT .
   63    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62
    L_PAREN           shift, and go to state 70

    $default  reduce using rule 62 (var)


State 46

   56 term: NUMBER .

    $default  reduce using rule 56 (term)


State 47

   59 term: SUB . NUMBER
   60     | SUB . var
   61     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 38
    NUMBER   shift, and go to state 71
    L_PAREN  shift, and go to state 72

    var  go to state 73


State 48

   32 relation_expr: L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 74
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 75
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 49

   15 statement: IF bool_expr . THEN statement SEMICOLON statements ENDIF
   16          | IF bool_expr . THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    THEN  shift, and go to state 76


State 50

   23 bool_expr: relation_and_expr . bool_expressions

    OR  shift, and go to state 77

    $default  reduce using rule 24 (bool_expressions)

    bool_expressions  go to state 78


State 51

   26 relation_and_expr: relation_expr . relation_and_expressions

    AND  shift, and go to state 79

    $default  reduce using rule 27 (relation_and_expressions)

    relation_and_expressions  go to state 80


State 52

   29 relation_expr: expression . comp expression

    NEQ  shift, and go to state 81
    EQ   shift, and go to state 82
    GTE  shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    LT   shift, and go to state 86

    comp  go to state 87


State 53

   43 expression: multiplicative_expr . expression_loop

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 44 (expression_loop)

    expression_loop  go to state 90


State 54

   54 multiplicative_expr: term . terms

    MOD   shift, and go to state 91
    DIV   shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 50 (terms)

    terms  go to state 94


State 55

   57 term: var .

    $default  reduce using rule 57 (term)


State 56

   17 statement: WHILE bool_expr . BEGINLOOP statement SEMICOLON statements ENDLOOP

    BEGINLOOP  shift, and go to state 95


State 57

   18 statement: DO BEGINLOOP . statement SEMICOLON statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 96
    var        go to state 40


State 58

   19 statement: READ var . vars

    COMMA  shift, and go to state 97

    $default  reduce using rule 64 (vars)

    vars  go to state 98


State 59

   20 statement: WRITE var . vars

    COMMA  shift, and go to state 97

    $default  reduce using rule 64 (vars)

    vars  go to state 99


State 60

   58 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 100
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 61

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 62

   63 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 101
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 63

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON . statements END_BODY

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 102
    statement   go to state 103
    var         go to state 40


State 64

   14 statement: var ASSIGN . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 104
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 65

    8 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 66

   34 relation_expr: NOT TRUE .

    $default  reduce using rule 34 (relation_expr)


State 67

   35 relation_expr: NOT FALSE .

    $default  reduce using rule 35 (relation_expr)


State 68

   36 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 105
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 75
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 69

   33 relation_expr: NOT expression . comp expression

    NEQ  shift, and go to state 81
    EQ   shift, and go to state 82
    GTE  shift, and go to state 83
    GT   shift, and go to state 84
    LTE  shift, and go to state 85
    LT   shift, and go to state 86

    comp  go to state 106


State 70

   55 term: IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    $default  reduce using rule 49 (expressions)

    expression           go to state 107
    expressions          go to state 108
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 71

   59 term: SUB NUMBER .

    $default  reduce using rule 59 (term)


State 72

   61 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 109
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 73

   60 term: SUB var .

    $default  reduce using rule 60 (term)


State 74

   32 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 110


State 75

   29 relation_expr: expression . comp expression
   58 term: L_PAREN expression . R_PAREN

    NEQ      shift, and go to state 81
    EQ       shift, and go to state 82
    GTE      shift, and go to state 83
    GT       shift, and go to state 84
    LTE      shift, and go to state 85
    LT       shift, and go to state 86
    R_PAREN  shift, and go to state 111

    comp  go to state 87


State 76

   15 statement: IF bool_expr THEN . statement SEMICOLON statements ENDIF
   16          | IF bool_expr THEN . statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 112
    var        go to state 40


State 77

   25 bool_expressions: OR . relation_and_expr bool_expressions

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    relation_and_expr    go to state 113
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 78

   23 bool_expr: relation_and_expr bool_expressions .

    $default  reduce using rule 23 (bool_expr)


State 79

   28 relation_and_expressions: AND . relation_expr relation_and_expressions

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    relation_expr        go to state 114
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 80

   26 relation_and_expr: relation_expr relation_and_expressions .

    $default  reduce using rule 26 (relation_and_expr)


State 81

   38 comp: NEQ .

    $default  reduce using rule 38 (comp)


State 82

   37 comp: EQ .

    $default  reduce using rule 37 (comp)


State 83

   42 comp: GTE .

    $default  reduce using rule 42 (comp)


State 84

   40 comp: GT .

    $default  reduce using rule 40 (comp)


State 85

   41 comp: LTE .

    $default  reduce using rule 41 (comp)


State 86

   39 comp: LT .

    $default  reduce using rule 39 (comp)


State 87

   29 relation_expr: expression comp . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 115
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 88

   46 expression_loop: SUB . multiplicative_expr expression_loop

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    multiplicative_expr  go to state 116
    term                 go to state 54
    var                  go to state 55


State 89

   45 expression_loop: ADD . multiplicative_expr expression_loop

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    multiplicative_expr  go to state 117
    term                 go to state 54
    var                  go to state 55


State 90

   43 expression: multiplicative_expr expression_loop .

    $default  reduce using rule 43 (expression)


State 91

   51 terms: MOD . term terms

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    term  go to state 118
    var   go to state 55


State 92

   52 terms: DIV . term terms

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    term  go to state 119
    var   go to state 55


State 93

   53 terms: MULT . term terms

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    term  go to state 120
    var   go to state 55


State 94

   54 multiplicative_expr: term terms .

    $default  reduce using rule 54 (multiplicative_expr)


State 95

   17 statement: WHILE bool_expr BEGINLOOP . statement SEMICOLON statements ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 121
    var        go to state 40


State 96

   18 statement: DO BEGINLOOP statement . SEMICOLON statements ENDLOOP WHILE bool_expr

    SEMICOLON  shift, and go to state 122


State 97

   65 vars: COMMA . var vars

    IDENT  shift, and go to state 38

    var  go to state 123


State 98

   19 statement: READ var vars .

    $default  reduce using rule 19 (statement)


State 99

   20 statement: WRITE var vars .

    $default  reduce using rule 20 (statement)


State 100

   58 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 101

   63 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 102

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements . END_BODY

    END_BODY  shift, and go to state 125


State 103

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 126


State 104

   14 statement: var ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 105

   36 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 127


State 106

   33 relation_expr: NOT expression comp . expression

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    expression           go to state 128
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 107

   47 expressions: expression . COMMA expressions
   48            | expression .

    COMMA  shift, and go to state 129

    $default  reduce using rule 48 (expressions)


State 108

   55 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


State 109

   61 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 110

   32 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 32 (relation_expr)


State 111

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 112

   15 statement: IF bool_expr THEN statement . SEMICOLON statements ENDIF
   16          | IF bool_expr THEN statement . SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    SEMICOLON  shift, and go to state 132


State 113

   25 bool_expressions: OR relation_and_expr . bool_expressions

    OR  shift, and go to state 77

    $default  reduce using rule 24 (bool_expressions)

    bool_expressions  go to state 133


State 114

   28 relation_and_expressions: AND relation_expr . relation_and_expressions

    AND  shift, and go to state 79

    $default  reduce using rule 27 (relation_and_expressions)

    relation_and_expressions  go to state 134


State 115

   29 relation_expr: expression comp expression .

    $default  reduce using rule 29 (relation_expr)


State 116

   46 expression_loop: SUB multiplicative_expr . expression_loop

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 44 (expression_loop)

    expression_loop  go to state 135


State 117

   45 expression_loop: ADD multiplicative_expr . expression_loop

    SUB  shift, and go to state 88
    ADD  shift, and go to state 89

    $default  reduce using rule 44 (expression_loop)

    expression_loop  go to state 136


State 118

   51 terms: MOD term . terms

    MOD   shift, and go to state 91
    DIV   shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 50 (terms)

    terms  go to state 137


State 119

   52 terms: DIV term . terms

    MOD   shift, and go to state 91
    DIV   shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 50 (terms)

    terms  go to state 138


State 120

   53 terms: MULT term . terms

    MOD   shift, and go to state 91
    DIV   shift, and go to state 92
    MULT  shift, and go to state 93

    $default  reduce using rule 50 (terms)

    terms  go to state 139


State 121

   17 statement: WHILE bool_expr BEGINLOOP statement . SEMICOLON statements ENDLOOP

    SEMICOLON  shift, and go to state 140


State 122

   18 statement: DO BEGINLOOP statement SEMICOLON . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 141
    statement   go to state 103
    var         go to state 40


State 123

   65 vars: COMMA var . vars

    COMMA  shift, and go to state 97

    $default  reduce using rule 64 (vars)

    vars  go to state 142


State 124

   63 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 125

    4 function: fnName SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY .

    $default  reduce using rule 4 (function)


State 126

   13 statements: statement SEMICOLON . statements

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 143
    statement   go to state 103
    var         go to state 40


State 127

   36 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 36 (relation_expr)


State 128

   33 relation_expr: NOT expression comp expression .

    $default  reduce using rule 33 (relation_expr)


State 129

   47 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 60

    $default  reduce using rule 49 (expressions)

    expression           go to state 107
    expressions          go to state 144
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 130

   55 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 55 (term)


State 131

   61 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (term)


State 132

   15 statement: IF bool_expr THEN statement SEMICOLON . statements ENDIF
   16          | IF bool_expr THEN statement SEMICOLON . statements ELSE statement SEMICOLON statements ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 145
    statement   go to state 103
    var         go to state 40


State 133

   25 bool_expressions: OR relation_and_expr bool_expressions .

    $default  reduce using rule 25 (bool_expressions)


State 134

   28 relation_and_expressions: AND relation_expr relation_and_expressions .

    $default  reduce using rule 28 (relation_and_expressions)


State 135

   46 expression_loop: SUB multiplicative_expr expression_loop .

    $default  reduce using rule 46 (expression_loop)


State 136

   45 expression_loop: ADD multiplicative_expr expression_loop .

    $default  reduce using rule 45 (expression_loop)


State 137

   51 terms: MOD term terms .

    $default  reduce using rule 51 (terms)


State 138

   52 terms: DIV term terms .

    $default  reduce using rule 52 (terms)


State 139

   53 terms: MULT term terms .

    $default  reduce using rule 53 (terms)


State 140

   17 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON . statements ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 146
    statement   go to state 103
    var         go to state 40


State 141

   18 statement: DO BEGINLOOP statement SEMICOLON statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 147


State 142

   65 vars: COMMA var vars .

    $default  reduce using rule 65 (vars)


State 143

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 144

   47 expressions: expression COMMA expressions .

    $default  reduce using rule 47 (expressions)


State 145

   15 statement: IF bool_expr THEN statement SEMICOLON statements . ENDIF
   16          | IF bool_expr THEN statement SEMICOLON statements . ELSE statement SEMICOLON statements ENDIF

    ENDIF  shift, and go to state 148
    ELSE   shift, and go to state 149


State 146

   17 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statements . ENDLOOP

    ENDLOOP  shift, and go to state 150


State 147

   18 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 151


State 148

   15 statement: IF bool_expr THEN statement SEMICOLON statements ENDIF .

    $default  reduce using rule 15 (statement)


State 149

   16 statement: IF bool_expr THEN statement SEMICOLON statements ELSE . statement SEMICOLON statements ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement  go to state 152
    var        go to state 40


State 150

   17 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 151

   18 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    IDENT    shift, and go to state 45
    NUMBER   shift, and go to state 46
    SUB      shift, and go to state 47
    L_PAREN  shift, and go to state 48

    bool_expr            go to state 153
    relation_and_expr    go to state 50
    relation_expr        go to state 51
    expression           go to state 52
    multiplicative_expr  go to state 53
    term                 go to state 54
    var                  go to state 55


State 152

   16 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement . SEMICOLON statements ENDIF

    SEMICOLON  shift, and go to state 154


State 153

   18 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 18 (statement)


State 154

   16 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON . statements ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 12 (statements)

    statements  go to state 155
    statement   go to state 103
    var         go to state 40


State 155

   16 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements . ENDIF

    ENDIF  shift, and go to state 156


State 156

   16 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF .

    $default  reduce using rule 16 (statement)
