Terminals which are not used

   UMINUS


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: /* empty */
    3          | function functions

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    5 declarations: /* empty */
    6             | declaration SEMICOLON declarations

    7 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | IDENT idents COLON INTEGER

    9 idents: /* empty */
   10       | COMMA IDENT idents

   11 statements: /* empty */
   12           | statement SEMICOLON statements

   13 statement: var ASSIGN expression
   14          | IF bool_expr THEN statement SEMICOLON statements ENDIF
   15          | IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF
   16          | WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP
   17          | DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr
   18          | READ var vars
   19          | WRITE var vars
   20          | CONTINUE
   21          | RETURN expression

   22 bool_expr: relation_and_expr bool_expressions

   23 bool_expressions: /* empty */
   24                 | OR relation_and_expr bool_expressions

   25 relation_and_expr: relation_expr relation_and_expressions

   26 relation_and_expressions: /* empty */
   27                         | AND relation_expr relation_and_expressions

   28 relation_expr: expression comp expression
   29              | TRUE
   30              | FALSE
   31              | L_PAREN bool_expr R_PAREN
   32              | NOT expression comp expression
   33              | NOT TRUE
   34              | NOT FALSE
   35              | NOT L_PAREN bool_expr R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expression: multiplicative_expr expression_loop

   43 expression_loop: /* empty */
   44                | ADD multiplicative_expr expression_loop
   45                | SUB multiplicative_expr expression_loop

   46 expressions: expression COMMA expressions
   47            | expression
   48            | /* empty */

   49 terms: /* empty */
   50      | MOD term terms
   51      | DIV term terms
   52      | MULT term terms

   53 multiplicative_expr: term terms

   54 term: IDENT L_PAREN expressions R_PAREN
   55     | NUMBER
   56     | var
   57     | L_PAREN expression R_PAREN
   58     | SUB NUMBER
   59     | SUB var
   60     | SUB L_PAREN expression R_PAREN

   61 var: IDENT
   62    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   63 vars: /* empty */
   64     | COMMA var vars


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 7 8
ARRAY (266) 7
OF (267) 7
IF (268) 14 15
THEN (269) 14 15
ENDIF (270) 14 15
ELSE (271) 15
WHILE (272) 16 17
DO (273) 17
BEGINLOOP (274) 16 17
ENDLOOP (275) 16 17
CONTINUE (276) 20
READ (277) 18
WRITE (278) 19
AND (279) 27
OR (280) 24
NOT (281) 32 33 34 35
TRUE (282) 29 33
FALSE (283) 30 34
RETURN (284) 21
IDENT (285) 4 7 8 10 54 61 62
COLON (286) 7 8
SEMICOLON (287) 4 6 12 14 15 16 17
COMMA (288) 10 46 64
NUMBER (289) 7 55 58
ASSIGN (290) 13
NEQ (291) 37
EQ (292) 36
GTE (293) 41
GT (294) 39
LTE (295) 40
LT (296) 38
SUB (297) 45 58 59 60
ADD (298) 44
MOD (299) 50
DIV (300) 51
MULT (301) 52
UMINUS (302)
L_SQUARE_BRACKET (303) 7 62
R_SQUARE_BRACKET (304) 7 62
L_PAREN (305) 31 35 54 57 60
R_PAREN (306) 31 35 54 57 60


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
declarations (56)
    on left: 5 6, on right: 4 6
declaration (57)
    on left: 7 8, on right: 6
idents (58)
    on left: 9 10, on right: 7 8 10
statements (59)
    on left: 11 12, on right: 4 12 14 15 16 17
statement (60)
    on left: 13 14 15 16 17 18 19 20 21, on right: 4 12 14 15 16 17
bool_expr (61)
    on left: 22, on right: 14 15 16 17 31 35
bool_expressions (62)
    on left: 23 24, on right: 22 24
relation_and_expr (63)
    on left: 25, on right: 22 24
relation_and_expressions (64)
    on left: 26 27, on right: 25 27
relation_expr (65)
    on left: 28 29 30 31 32 33 34 35, on right: 25 27
comp (66)
    on left: 36 37 38 39 40 41, on right: 28 32
expression (67)
    on left: 42, on right: 13 21 28 32 46 47 57 60 62
expression_loop (68)
    on left: 43 44 45, on right: 42 44 45
expressions (69)
    on left: 46 47 48, on right: 46 54
terms (70)
    on left: 49 50 51 52, on right: 50 51 52 53
multiplicative_expr (71)
    on left: 53, on right: 42 44 45
term (72)
    on left: 54 55 56 57 58 59 60, on right: 50 51 52 53
var (73)
    on left: 61 62, on right: 13 18 19 56 59 64
vars (74)
    on left: 63 64, on right: 18 19 64


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .

    $default  reduce using rule 1 (program)


state 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


state 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 11
    declaration   go to state 12


state 10

    7 declaration: IDENT . idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | IDENT . idents COLON INTEGER

    COMMA  shift, and go to state 13

    $default  reduce using rule 9 (idents)

    idents  go to state 14


state 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_PARAMS  shift, and go to state 15


state 12

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


state 13

   10 idents: COMMA . IDENT idents

    IDENT  shift, and go to state 17


state 14

    7 declaration: IDENT idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | IDENT idents . COLON INTEGER

    COLON  shift, and go to state 18


state 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


state 16

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 12


state 17

   10 idents: COMMA IDENT . idents

    COMMA  shift, and go to state 13

    $default  reduce using rule 9 (idents)

    idents  go to state 21


state 18

    7 declaration: IDENT idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    8            | IDENT idents COLON . INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


state 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 5 (declarations)

    declarations  go to state 24
    declaration   go to state 12


state 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 21

   10 idents: COMMA IDENT idents .

    $default  reduce using rule 10 (idents)


state 22

    8 declaration: IDENT idents COLON INTEGER .

    $default  reduce using rule 8 (declaration)


state 23

    7 declaration: IDENT idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


state 24

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY

    END_LOCALS  shift, and go to state 26


state 25

    7 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27


state 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statement SEMICOLON statements END_BODY

    BEGIN_BODY  shift, and go to state 28


state 27

    7 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 29


state 28

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statement SEMICOLON statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 38
    var        go to state 39


state 29

    7 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 40


state 30

   14 statement: IF . bool_expr THEN statement SEMICOLON statements ENDIF
   15          | IF . bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 48
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 31

   16 statement: WHILE . bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 55
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 32

   17 statement: DO . BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 56


state 33

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


state 34

   18 statement: READ . var vars

    IDENT  shift, and go to state 37

    var  go to state 57


state 35

   19 statement: WRITE . var vars

    IDENT  shift, and go to state 37

    var  go to state 58


state 36

   21 statement: RETURN . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 60
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 37

   61 var: IDENT .
   62    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 61

    $default  reduce using rule 61 (var)


state 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement . SEMICOLON statements END_BODY

    SEMICOLON  shift, and go to state 62


state 39

   13 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 63


state 40

    7 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 64


state 41

   32 relation_expr: NOT . expression comp expression
   33              | NOT . TRUE
   34              | NOT . FALSE
   35              | NOT . L_PAREN bool_expr R_PAREN

    TRUE     shift, and go to state 65
    FALSE    shift, and go to state 66
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 67

    expression           go to state 68
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 42

   29 relation_expr: TRUE .

    $default  reduce using rule 29 (relation_expr)


state 43

   30 relation_expr: FALSE .

    $default  reduce using rule 30 (relation_expr)


state 44

   54 term: IDENT . L_PAREN expressions R_PAREN
   61 var: IDENT .
   62    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 61
    L_PAREN           shift, and go to state 69

    $default  reduce using rule 61 (var)


state 45

   55 term: NUMBER .

    $default  reduce using rule 55 (term)


state 46

   58 term: SUB . NUMBER
   59     | SUB . var
   60     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 37
    NUMBER   shift, and go to state 70
    L_PAREN  shift, and go to state 71

    var  go to state 72


state 47

   31 relation_expr: L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 73
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 74
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 48

   14 statement: IF bool_expr . THEN statement SEMICOLON statements ENDIF
   15          | IF bool_expr . THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    THEN  shift, and go to state 75


state 49

   22 bool_expr: relation_and_expr . bool_expressions

    OR  shift, and go to state 76

    $default  reduce using rule 23 (bool_expressions)

    bool_expressions  go to state 77


state 50

   25 relation_and_expr: relation_expr . relation_and_expressions

    AND  shift, and go to state 78

    $default  reduce using rule 26 (relation_and_expressions)

    relation_and_expressions  go to state 79


state 51

   28 relation_expr: expression . comp expression

    NEQ  shift, and go to state 80
    EQ   shift, and go to state 81
    GTE  shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    LT   shift, and go to state 85

    comp  go to state 86


state 52

   42 expression: multiplicative_expr . expression_loop

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 43 (expression_loop)

    expression_loop  go to state 89


state 53

   53 multiplicative_expr: term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 49 (terms)

    terms  go to state 93


state 54

   56 term: var .

    $default  reduce using rule 56 (term)


state 55

   16 statement: WHILE bool_expr . BEGINLOOP statement SEMICOLON statements ENDLOOP

    BEGINLOOP  shift, and go to state 94


state 56

   17 statement: DO BEGINLOOP . statement SEMICOLON statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 95
    var        go to state 39


state 57

   18 statement: READ var . vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 63 (vars)

    vars  go to state 97


state 58

   19 statement: WRITE var . vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 63 (vars)

    vars  go to state 98


state 59

   57 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 99
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 60

   21 statement: RETURN expression .

    $default  reduce using rule 21 (statement)


state 61

   62 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 100
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 62

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON . statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 11 (statements)

    statements  go to state 101
    statement   go to state 102
    var         go to state 39


state 63

   13 statement: var ASSIGN . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 103
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 64

    7 declaration: IDENT idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 7 (declaration)


state 65

   33 relation_expr: NOT TRUE .

    $default  reduce using rule 33 (relation_expr)


state 66

   34 relation_expr: NOT FALSE .

    $default  reduce using rule 34 (relation_expr)


state 67

   35 relation_expr: NOT L_PAREN . bool_expr R_PAREN
   57 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 104
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 74
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 68

   32 relation_expr: NOT expression . comp expression

    NEQ  shift, and go to state 80
    EQ   shift, and go to state 81
    GTE  shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    LT   shift, and go to state 85

    comp  go to state 105


state 69

   54 term: IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    $default  reduce using rule 48 (expressions)

    expression           go to state 106
    expressions          go to state 107
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 70

   58 term: SUB NUMBER .

    $default  reduce using rule 58 (term)


state 71

   60 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 108
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 72

   59 term: SUB var .

    $default  reduce using rule 59 (term)


state 73

   31 relation_expr: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 109


state 74

   28 relation_expr: expression . comp expression
   57 term: L_PAREN expression . R_PAREN

    NEQ      shift, and go to state 80
    EQ       shift, and go to state 81
    GTE      shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    LT       shift, and go to state 85
    R_PAREN  shift, and go to state 110

    comp  go to state 86


state 75

   14 statement: IF bool_expr THEN . statement SEMICOLON statements ENDIF
   15          | IF bool_expr THEN . statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 111
    var        go to state 39


state 76

   24 bool_expressions: OR . relation_and_expr bool_expressions

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    relation_and_expr    go to state 112
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 77

   22 bool_expr: relation_and_expr bool_expressions .

    $default  reduce using rule 22 (bool_expr)


state 78

   27 relation_and_expressions: AND . relation_expr relation_and_expressions

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    relation_expr        go to state 113
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 79

   25 relation_and_expr: relation_expr relation_and_expressions .

    $default  reduce using rule 25 (relation_and_expr)


state 80

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


state 81

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


state 82

   41 comp: GTE .

    $default  reduce using rule 41 (comp)


state 83

   39 comp: GT .

    $default  reduce using rule 39 (comp)


state 84

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


state 85

   38 comp: LT .

    $default  reduce using rule 38 (comp)


state 86

   28 relation_expr: expression comp . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 114
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 87

   45 expression_loop: SUB . multiplicative_expr expression_loop

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    multiplicative_expr  go to state 115
    term                 go to state 53
    var                  go to state 54


state 88

   44 expression_loop: ADD . multiplicative_expr expression_loop

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    multiplicative_expr  go to state 116
    term                 go to state 53
    var                  go to state 54


state 89

   42 expression: multiplicative_expr expression_loop .

    $default  reduce using rule 42 (expression)


state 90

   50 terms: MOD . term terms

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    term  go to state 117
    var   go to state 54


state 91

   51 terms: DIV . term terms

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    term  go to state 118
    var   go to state 54


state 92

   52 terms: MULT . term terms

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    term  go to state 119
    var   go to state 54


state 93

   53 multiplicative_expr: term terms .

    $default  reduce using rule 53 (multiplicative_expr)


state 94

   16 statement: WHILE bool_expr BEGINLOOP . statement SEMICOLON statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 120
    var        go to state 39


state 95

   17 statement: DO BEGINLOOP statement . SEMICOLON statements ENDLOOP WHILE bool_expr

    SEMICOLON  shift, and go to state 121


state 96

   64 vars: COMMA . var vars

    IDENT  shift, and go to state 37

    var  go to state 122


state 97

   18 statement: READ var vars .

    $default  reduce using rule 18 (statement)


state 98

   19 statement: WRITE var vars .

    $default  reduce using rule 19 (statement)


state 99

   57 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


state 100

   62 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


state 101

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements . END_BODY

    END_BODY  shift, and go to state 124


state 102

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 125


state 103

   13 statement: var ASSIGN expression .

    $default  reduce using rule 13 (statement)


state 104

   35 relation_expr: NOT L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 126


state 105

   32 relation_expr: NOT expression comp . expression

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    expression           go to state 127
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 106

   46 expressions: expression . COMMA expressions
   47            | expression .

    COMMA  shift, and go to state 128

    $default  reduce using rule 47 (expressions)


state 107

   54 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


state 108

   60 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 130


state 109

   31 relation_expr: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 31 (relation_expr)


state 110

   57 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (term)


state 111

   14 statement: IF bool_expr THEN statement . SEMICOLON statements ENDIF
   15          | IF bool_expr THEN statement . SEMICOLON statements ELSE statement SEMICOLON statements ENDIF

    SEMICOLON  shift, and go to state 131


state 112

   24 bool_expressions: OR relation_and_expr . bool_expressions

    OR  shift, and go to state 76

    $default  reduce using rule 23 (bool_expressions)

    bool_expressions  go to state 132


state 113

   27 relation_and_expressions: AND relation_expr . relation_and_expressions

    AND  shift, and go to state 78

    $default  reduce using rule 26 (relation_and_expressions)

    relation_and_expressions  go to state 133


state 114

   28 relation_expr: expression comp expression .

    $default  reduce using rule 28 (relation_expr)


state 115

   45 expression_loop: SUB multiplicative_expr . expression_loop

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 43 (expression_loop)

    expression_loop  go to state 134


state 116

   44 expression_loop: ADD multiplicative_expr . expression_loop

    SUB  shift, and go to state 87
    ADD  shift, and go to state 88

    $default  reduce using rule 43 (expression_loop)

    expression_loop  go to state 135


state 117

   50 terms: MOD term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 49 (terms)

    terms  go to state 136


state 118

   51 terms: DIV term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 49 (terms)

    terms  go to state 137


state 119

   52 terms: MULT term . terms

    MOD   shift, and go to state 90
    DIV   shift, and go to state 91
    MULT  shift, and go to state 92

    $default  reduce using rule 49 (terms)

    terms  go to state 138


state 120

   16 statement: WHILE bool_expr BEGINLOOP statement . SEMICOLON statements ENDLOOP

    SEMICOLON  shift, and go to state 139


state 121

   17 statement: DO BEGINLOOP statement SEMICOLON . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 11 (statements)

    statements  go to state 140
    statement   go to state 102
    var         go to state 39


state 122

   64 vars: COMMA var . vars

    COMMA  shift, and go to state 96

    $default  reduce using rule 63 (vars)

    vars  go to state 141


state 123

   62 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (var)


state 124

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statement SEMICOLON statements END_BODY .

    $default  reduce using rule 4 (function)


state 125

   12 statements: statement SEMICOLON . statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 11 (statements)

    statements  go to state 142
    statement   go to state 102
    var         go to state 39


state 126

   35 relation_expr: NOT L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 35 (relation_expr)


state 127

   32 relation_expr: NOT expression comp expression .

    $default  reduce using rule 32 (relation_expr)


state 128

   46 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 59

    $default  reduce using rule 48 (expressions)

    expression           go to state 106
    expressions          go to state 143
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 129

   54 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 54 (term)


state 130

   60 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (term)


state 131

   14 statement: IF bool_expr THEN statement SEMICOLON . statements ENDIF
   15          | IF bool_expr THEN statement SEMICOLON . statements ELSE statement SEMICOLON statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 11 (statements)

    statements  go to state 144
    statement   go to state 102
    var         go to state 39


state 132

   24 bool_expressions: OR relation_and_expr bool_expressions .

    $default  reduce using rule 24 (bool_expressions)


state 133

   27 relation_and_expressions: AND relation_expr relation_and_expressions .

    $default  reduce using rule 27 (relation_and_expressions)


state 134

   45 expression_loop: SUB multiplicative_expr expression_loop .

    $default  reduce using rule 45 (expression_loop)


state 135

   44 expression_loop: ADD multiplicative_expr expression_loop .

    $default  reduce using rule 44 (expression_loop)


state 136

   50 terms: MOD term terms .

    $default  reduce using rule 50 (terms)


state 137

   51 terms: DIV term terms .

    $default  reduce using rule 51 (terms)


state 138

   52 terms: MULT term terms .

    $default  reduce using rule 52 (terms)


state 139

   16 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON . statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 11 (statements)

    statements  go to state 145
    statement   go to state 102
    var         go to state 39


state 140

   17 statement: DO BEGINLOOP statement SEMICOLON statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 146


state 141

   64 vars: COMMA var vars .

    $default  reduce using rule 64 (vars)


state 142

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


state 143

   46 expressions: expression COMMA expressions .

    $default  reduce using rule 46 (expressions)


state 144

   14 statement: IF bool_expr THEN statement SEMICOLON statements . ENDIF
   15          | IF bool_expr THEN statement SEMICOLON statements . ELSE statement SEMICOLON statements ENDIF

    ENDIF  shift, and go to state 147
    ELSE   shift, and go to state 148


state 145

   16 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statements . ENDLOOP

    ENDLOOP  shift, and go to state 149


state 146

   17 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 150


state 147

   14 statement: IF bool_expr THEN statement SEMICOLON statements ENDIF .

    $default  reduce using rule 14 (statement)


state 148

   15 statement: IF bool_expr THEN statement SEMICOLON statements ELSE . statement SEMICOLON statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    statement  go to state 151
    var        go to state 39


state 149

   16 statement: WHILE bool_expr BEGINLOOP statement SEMICOLON statements ENDLOOP .

    $default  reduce using rule 16 (statement)


state 150

   17 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE . bool_expr

    NOT      shift, and go to state 41
    TRUE     shift, and go to state 42
    FALSE    shift, and go to state 43
    IDENT    shift, and go to state 44
    NUMBER   shift, and go to state 45
    SUB      shift, and go to state 46
    L_PAREN  shift, and go to state 47

    bool_expr            go to state 152
    relation_and_expr    go to state 49
    relation_expr        go to state 50
    expression           go to state 51
    multiplicative_expr  go to state 52
    term                 go to state 53
    var                  go to state 54


state 151

   15 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement . SEMICOLON statements ENDIF

    SEMICOLON  shift, and go to state 153


state 152

   17 statement: DO BEGINLOOP statement SEMICOLON statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 17 (statement)


state 153

   15 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON . statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36
    IDENT     shift, and go to state 37

    $default  reduce using rule 11 (statements)

    statements  go to state 154
    statement   go to state 102
    var         go to state 39


state 154

   15 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements . ENDIF

    ENDIF  shift, and go to state 155


state 155

   15 statement: IF bool_expr THEN statement SEMICOLON statements ELSE statement SEMICOLON statements ENDIF .

    $default  reduce using rule 15 (statement)
